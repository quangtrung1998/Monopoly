

import java.awt.Color;
import java.awt.Font;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.ItemEvent;
import java.awt.event.ItemListener;

import javax.swing.DefaultComboBoxModel;
import javax.swing.JButton;
import javax.swing.JComboBox;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JTextField;



@SuppressWarnings("serial")
public class MainGame extends JFrame {
	private JLabel label_2;
	private static JLabel NameAndPrice;
	private static JLabel priceini;
	private static JLabel price1;
	private static JLabel price2;
	private static JLabel price3;
	private static JLabel villa;
	private static JLabel NameAndPrice1;
	private static JLabel priceini1;
	private static JLabel price11;
	private static JLabel price21;
	private static JLabel price31;
	private static JLabel villa1;
	static BuyHouse byhouse;
	private static Surface s;
	private static JButton button ;
	private static  int sum=0;
	private static  int sum1=0,prision1=0,prision2=0,sum2=0;
	public static 	int inialmoney1=1000,inialmoney2=1000;
	public static DefaultComboBoxModel mode;
	public static JComboBox comboBox ;
	public static int player1 = 1;
	private static Camera camera;
	private static CameraComputer cameracomputer;
	private static CameraShow camerashow;
	private static CameraShowComputer camerashowcomputer;
	public MainGame() {
		setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
		setBounds(85, 140, 1200, 695);
		setResizable(false);
		setTitle("MonopolyGame");
	    button = new JButton("DICE");
	    button.setBounds(595, 320, 75, 70);
		getContentPane().add(button);
		JPanel panel_1 = new JPanel();
		panel_1.setBounds(15, 360, 250, 400);
		getContentPane().add(panel_1);
		panel_1.setLayout(null);
	    NameAndPrice = new JLabel("");
		NameAndPrice.setOpaque(true);
		NameAndPrice.setBounds(25, 65, 240, 36);
		panel_1.add(NameAndPrice);
		priceini = new JLabel("");
		priceini.setFont(new Font("Bradley Hand ITC", Font.PLAIN, 20));
		priceini.setBounds(30, 95, 240, 50);
		panel_1.add(priceini);
		price1 = new JLabel("");
		price1.setFont(new Font("Bradley Hand ITC", Font.PLAIN, 20));
		price1.setBounds(30, 131, 240, 50);
		panel_1.add(price1);	
		price2 = new JLabel("");
		price2.setFont(new Font("Bradley Hand ITC", Font.PLAIN, 20));
		price2.setBounds(30, 163, 240, 50);
		panel_1.add(price2);	
		price3 = new JLabel("");
		price3.setFont(new Font("Bradley Hand ITC", Font.PLAIN, 20));
		price3.setBounds(30, 196, 240, 50);
		panel_1.add(price3);
		villa = new JLabel("");
		villa.setFont(new Font("Bradley Hand ITC", Font.PLAIN, 20));
		villa.setBounds(30, 234, 240, 50);
		panel_1.add(villa);
		JPanel panel_2 = new JPanel();
		panel_2.setBounds(10, 40, 250, 400);
		getContentPane().add(panel_2);
		panel_2.setLayout(null);
	    NameAndPrice1 = new JLabel("");
		NameAndPrice1.setOpaque(true);
		NameAndPrice1.setBounds(25, 65, 240, 36);
		panel_2.add(NameAndPrice1);
		priceini1 = new JLabel("");
		priceini1.setFont(new Font("Bradley Hand ITC", Font.PLAIN, 20));
		priceini1.setBounds(30, 95, 240, 50);
		panel_2.add(priceini1);
		price11 = new JLabel("");
		price11.setFont(new Font("Bradley Hand ITC", Font.PLAIN, 20));
		price11.setBounds(30, 131, 240, 50);
		panel_2.add(price11);	
		price21 = new JLabel("");
		price21.setFont(new Font("Bradley Hand ITC", Font.PLAIN, 20));
		price21.setBounds(30, 163, 240, 50);
		panel_2.add(price21);	
		price31 = new JLabel("");
		price31.setFont(new Font("Bradley Hand ITC", Font.PLAIN, 20));
		price31.setBounds(30, 196, 240, 50);
		panel_2.add(price31);
		villa1 = new JLabel("");
		villa1.setFont(new Font("Bradley Hand ITC", Font.PLAIN, 20));
		villa1.setBounds(30, 234, 240, 50);
		panel_2.add(villa1);
		 comboBox = new JComboBox();
		comboBox.setFont(new Font("Bradley Hand ITC", Font.PLAIN, 20));
		 mode = new DefaultComboBoxModel<>();
		mode.addElement("     House was bought");
		comboBox.setModel(mode);
		comboBox.setBounds(20, 0, 240, 39);
		add(comboBox);

		init();
	}
	 public void house(int a)
	 {
		 Place place = new Place();
		 place.setLocate(a);
		 place.work();
		 Color col = place.getColor();
		 NameAndPrice.setBackground(col);
		 int pr =place.getPriceini();
		 priceini.setText(" INITIAL PRICE : "+pr);
		 int pr1=place.getPrice1();
		 price1.setText("  	1 HOUSE : "+pr1);
		 int pr2=place.getPrice2();
		 price2.setText("  	2 HOUSE : "+pr2);
		 int pr3=place.getPrice3();
		 price3.setText("  	3 HOUSE : "+pr3);
		 int vil=place.getVilla();
		 villa.setText("  VILLA : "+vil);	
	 }
	 public void house1(int a)
	 {
		 Place place = new Place();
		 place.setLocate(a);
		 place.work();
		 Color col1 = place.getColor();
		 NameAndPrice1.setBackground(col1);
		 int pr01 =place.getPriceini();
		 priceini1.setText(" INITIAL PRICE : "+pr01);
		 int pr11=place.getPrice1();
		 price11.setText("  	1 HOUSE : "+pr11);
		 int pr21=place.getPrice2();
		 price21.setText("  	2 HOUSE : "+pr21);
		 int pr31=place.getPrice3();
		 price31.setText("  	3 HOUSE : "+pr31);
		 int vil1=place.getVilla();
		 villa1.setText("  VILLA : "+vil1);	
	 }
	public void init()
	{
		setLocationRelativeTo(null);
		
		s = new Surface(this);
		add(s);
		setVisible(true);
	}

	private void move() {
		s.move();
		
	}
	private void move1() {
		s.move1();
	}

	public static void run () throws InterruptedException {
		
		MainGame game = new MainGame();
		cameracomputer = new CameraComputer();
		camera = new Camera();
		camerashow = new CameraShow();
	    camerashowcomputer = new CameraShowComputer();
		camera.add(camerashow);
		cameracomputer.add(camerashowcomputer);
		camera.Show();
		cameracomputer.Show();
		while(inialmoney1>=0&&inialmoney2>=0)
		{	
			if(player1==1&&prision1==0)
			{
				sum=0;
				int b=0;
				ChangeDice.setA(0);
				ChangeDice.setB(0);
				button.addActionListener(new ActionListener() {
					public void actionPerformed(ActionEvent e) {
						ChangeDice.setA(2);
						ChangeDice.setB(2);
						sum = ChangeDice.getA()+ChangeDice.getB();
						player1=2;
						
					}
				});
				comboBox.addItemListener(new ItemListener() {
					public void itemStateChanged(ItemEvent arg0) {
					if(comboBox.getSelectedIndex()==0)
						game.house(0);
					else {
					int a = (int) comboBox.getSelectedItem();
					game.house1(a);
					}
					}
				});
				
				if(sum!=0)
					b++;
				while(sum!=0)
				{	
					sum1++;
					game.move();	
					game.repaint();
					camera.change(sum1);
					Thread.sleep(1000);
					sum--;
				}
			
				if(b!=0) {	
					game.house(sum1);
				
					if(sum1>=40)
						{
							sum1-=40;
							inialmoney1+=200;
						}
					else if(sum1==30)
					{	
						JOptionPane.showMessageDialog(game,"You have to go to jail" );
						sum=20;
						while(sum!=0)
						{	
							game.move();	
							game.repaint();
							Thread.sleep(500);
							sum--;
						}
						sum1=10;
						prision1=3;
					}
					game.house(sum1);
					BuyHouse.house(sum1,1);
					System.out.println(sum1);
					System.out.println(inialmoney1);
					}
				
			}
			else if(player1==2&&prision2==0)
			{
				sum=0;
				int b=0;
				ChangeDice.setA(2);
				ChangeDice.setB(2);
				sum = ChangeDice.getA()+ChangeDice.getB();
				if(sum!=0)
					b++;
				while(sum!=0)
				{	
					sum2++;
					game.move1();	
					game.repaint();
					cameracomputer.change(sum2);
					Thread.sleep(100);
					sum--;
				}
				if(b!=0) {	
					game.house(sum2);
					
					if(sum2>=40)
						{
							sum2-=40;
							inialmoney2+=200;
						}
					else if(sum2==30)
						{	
						JOptionPane.showMessageDialog(game,"You have to go to jail" );
						sum=20;
						while(sum!=0)
						{	
							game.move1();	
							game.repaint();
							Thread.sleep(500);
							sum--;
						}
						sum2=10;
						prision2=3;
						}
					game.house(sum2);
					BuyHouse.house(sum2,2);
					System.out.println(sum2);
					System.out.println(inialmoney2);
				}
				player1=1;
			}
			if(prision1!=0&&prision2!=0)
				{
					prision1--;
					prision2--;
				}
			else if(prision1!=0&&prision2==0)
				{
					prision1--;
					player1=2;
					Thread.sleep(100);
					
				}
			else if(prision2!=0&&prision1==0)
				{
					prision2--;
					player1=1;
					Thread.sleep(100);
				}
		}
		if(inialmoney1<=0)
		{
			JOptionPane.showMessageDialog(game,"You Lose" );
		}
		else
		{
			JOptionPane.showMessageDialog(game,"You Win" );
		}
		
	}

}
